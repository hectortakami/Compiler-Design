// Code generated by the chimera compiler

.assembly 'Chimera' {}
.assembly extern 'ChimeraLib' {}
.class public 'ChimeraProgram' extends ['mscorlib']'System'.'Object' {

	.field public static string 'option'
	.field public static string 'str'

	.method public static bool 'IsPalindrome'(string str){
		.locals init (
			int32 finish, 
			int32 start
		)

		ldc.i4 0
		stloc 'finish'
		ldc.i4 0
		stloc 'start'

		ldc.i4 0
		stloc start
		ldarg str
		call int32 class ['ChimeraLib']'Chimera'.Lib::'LenStr'(string)
		ldc.i4 1
		sub.ovf
		stloc finish
	loop_0:

	If_1_0_condition:
		ldloc start
		ldloc finish
		cgt
		brzero If_1_1_condition
	If_1_0_body:
		br end_0
		br If_1_End

	If_1_1_condition:
	If_1_End:

	If_2_0_condition:
		ldarg str
		ldloc start
		call string class ['ChimeraLib']'Chimera'.Lib::'AtStr'(string,int32)
		ldarg str
		ldloc finish
		call string class ['ChimeraLib']'Chimera'.Lib::'AtStr'(string,int32)
		call int32 class ['ChimeraLib']'Chimera'.Lib::'CmpStr'(string,string)
		ldc.i4 0
		ceq
		ldc.i4.1
		xor
		brzero If_2_1_condition
	If_2_0_body:
		ldc.i4.0
		ret
		br If_2_End

	If_2_1_condition:
	If_2_End:
		ldloc start
		ldc.i4 1
		add.ovf
		stloc start
		ldloc finish
		ldc.i4 1
		sub.ovf
		stloc finish
		br loop_0
	end_0:
		ldc.i4.1
		ret
		ret
	}
	.method public static void main(){
		.entrypoint

		ldstr ""
		stsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldstr ""
		stsfld string class ['Chimera']'ChimeraProgram'::'str'

	loop_3:
		ldstr "Input a string: "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		call string class ['ChimeraLib']'Chimera'.Lib::'RdStr'()
		stsfld string class ['Chimera']'ChimeraProgram'::'str'

	If_4_0_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'str'
		call bool class ['Chimera']'ChimeraProgram'::'IsPalindrome'(string)
		brzero If_4_1_condition
	If_4_0_body:
		ldstr "The string \""
		ldsfld string class ['Chimera']'ChimeraProgram'::'str'
		ldstr "\" is a palindrome."
		call string class ['ChimeraLib']'Chimera'.Lib::'CatStr'(string,string)
		call string class ['ChimeraLib']'Chimera'.Lib::'CatStr'(string,string)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		br If_4_End

	If_4_1_condition:
		ldstr "The string \""
		ldsfld string class ['Chimera']'ChimeraProgram'::'str'
		ldstr "\" is NOT a palindrome."
		call string class ['ChimeraLib']'Chimera'.Lib::'CatStr'(string,string)
		call string class ['ChimeraLib']'Chimera'.Lib::'CatStr'(string,string)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		br If_4_End

	If_4_2_condition:
	If_4_End:
		call void class ['ChimeraLib']'Chimera'.Lib::'WrLn'()
		ldstr "Check another string? "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		call string class ['ChimeraLib']'Chimera'.Lib::'RdStr'()
		stsfld string class ['Chimera']'ChimeraProgram'::'option'

	If_5_0_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		call int32 class ['ChimeraLib']'Chimera'.Lib::'LenStr'(string)
		ldc.i4 0
		ceq
		brzero If_5_1_condition
	If_5_0_body:
		ldstr "N"
		stsfld string class ['Chimera']'ChimeraProgram'::'option'
		br If_5_End

	If_5_1_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldc.i4 0
		call string class ['ChimeraLib']'Chimera'.Lib::'AtStr'(string,int32)
		stsfld string class ['Chimera']'ChimeraProgram'::'option'
		br If_5_End

	If_5_2_condition:
	If_5_End:

	If_6_0_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldstr "Y"
		call int32 class ['ChimeraLib']'Chimera'.Lib::'CmpStr'(string,string)
		ldc.i4 0
		ceq
		ldc.i4.1
		xor
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldstr "y"
		call int32 class ['ChimeraLib']'Chimera'.Lib::'CmpStr'(string,string)
		ldc.i4 0
		ceq
		ldc.i4.1
		xor
		and
		brzero If_6_1_condition
	If_6_0_body:
		br end_3
		br If_6_End

	If_6_1_condition:
	If_6_End:
		br loop_3
	end_3:
		ret
	}
}
