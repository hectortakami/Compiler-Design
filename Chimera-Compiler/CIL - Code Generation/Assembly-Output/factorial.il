// Code generated by the chimera compiler

.assembly 'Chimera' {}
.assembly extern 'ChimeraLib' {}
.class public 'ChimeraProgram' extends ['mscorlib']'System'.'Object' {

	.field public static int32 'num'
	.field public static string 'option'

	.method public static int32 'IterativeFactorial'(int32 n){
		.locals init (
			int32 i, 
			int32 r
		)

		ldc.i4 0
		stloc 'i'
		ldc.i4 0
		stloc 'r'

		ldc.i4 1
		stloc r
		ldc.i4 2
		stloc i
	loop_0:

	If_1_0_condition:
		ldloc i
		ldarg n
		cgt
		brzero If_1_1_condition
	If_1_0_body:
		br end_0
		br If_1_End

	If_1_1_condition:
	If_1_End:
		ldloc r
		ldloc i
		mul.ovf
		stloc r
		ldloc i
		ldc.i4 1
		add.ovf
		stloc i
		br loop_0
	end_0:
		ldloc r
		ret
		ret
	}
	.method public static int32 'RecursiveFactorial'(int32 n){
		.locals init (
		)



	If_2_0_condition:
		ldarg n
		ldc.i4 1
		cgt
		ldc.i4.1
		xor
		brzero If_2_1_condition
	If_2_0_body:
		ldc.i4 1
		ret
		br If_2_End

	If_2_1_condition:
		ldarg n
		ldarg n
		ldc.i4 1
		sub.ovf
		call int32 class ['Chimera']'ChimeraProgram'::'RecursiveFactorial'(int32)
		mul.ovf
		ret
		br If_2_End

	If_2_2_condition:
	If_2_End:
		ret
	}
	.method public static void main(){
		.entrypoint

		ldc.i4 0
		stsfld int32 class ['Chimera']'ChimeraProgram'::'num'
		ldstr ""
		stsfld string class ['Chimera']'ChimeraProgram'::'option'

	loop_3:
		ldstr "Input a number: "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		call int32 class ['ChimeraLib']'Chimera'.Lib::'RdInt'()
		stsfld int32 class ['Chimera']'ChimeraProgram'::'num'
		ldstr "Iterative factorial: "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		ldsfld int32 class ['Chimera']'ChimeraProgram'::'num'
		call int32 class ['Chimera']'ChimeraProgram'::'IterativeFactorial'(int32)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrInt'(int32)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrLn'()
		ldstr "Recursive factorial: "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		ldsfld int32 class ['Chimera']'ChimeraProgram'::'num'
		call int32 class ['Chimera']'ChimeraProgram'::'RecursiveFactorial'(int32)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrInt'(int32)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrLn'()
		ldstr "Compute another factorial? "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		call string class ['ChimeraLib']'Chimera'.Lib::'RdStr'()
		stsfld string class ['Chimera']'ChimeraProgram'::'option'

	If_4_0_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		call int32 class ['ChimeraLib']'Chimera'.Lib::'LenStr'(string)
		ldc.i4 0
		ceq
		brzero If_4_1_condition
	If_4_0_body:
		ldstr "N"
		stsfld string class ['Chimera']'ChimeraProgram'::'option'
		br If_4_End

	If_4_1_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldc.i4 0
		call string class ['ChimeraLib']'Chimera'.Lib::'AtStr'(string,int32)
		stsfld string class ['Chimera']'ChimeraProgram'::'option'
		br If_4_End

	If_4_2_condition:
	If_4_End:

	If_5_0_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldstr "Y"
		call int32 class ['ChimeraLib']'Chimera'.Lib::'CmpStr'(string,string)
		ldc.i4 0
		ceq
		ldc.i4.1
		xor
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldstr "y"
		call int32 class ['ChimeraLib']'Chimera'.Lib::'CmpStr'(string,string)
		ldc.i4 0
		ceq
		ldc.i4.1
		xor
		and
		brzero If_5_1_condition
	If_5_0_body:
		br end_3
		br If_5_End

	If_5_1_condition:
	If_5_End:
		br loop_3
	end_3:
		ret
	}
}
