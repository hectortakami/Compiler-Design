// Code generated by the chimera compiler

.assembly 'Chimera' {}
.assembly extern 'ChimeraLib' {}
.class public 'ChimeraProgram' extends ['mscorlib']'System'.'Object' {

	.field public static int32 'num'
	.field public static string 'option'

	.method public static string 'Binary'(int32 num){
		.locals init (
			int32 remainder, 
			string result
		)

		ldc.i4 0
		stloc 'remainder'
		ldstr ""
		stloc 'result'


	If_0_0_condition:
		ldarg num
		ldc.i4 0
		cgt
		ldc.i4.1
		xor
		brzero If_0_1_condition
	If_0_0_body:
		ldstr "0"
		ret
		br If_0_End

	If_0_1_condition:
	If_0_End:
		ldstr ""
		stloc result
	loop_1:
		ldarg num
		ldc.i4 2
		rem
		stloc remainder
		ldloc remainder
		call string class ['ChimeraLib']'Chimera'.Lib::'IntToStr'(int32)
		ldloc result
		call string class ['ChimeraLib']'Chimera'.Lib::'CatStr'(string,string)
		stloc result
		ldarg num
		ldc.i4 2
		div
		starg num

	If_2_0_condition:
		ldarg num
		ldc.i4 0
		ceq
		brzero If_2_1_condition
	If_2_0_body:
		br end_1
		br If_2_End

	If_2_1_condition:
	If_2_End:
		br loop_1
	end_1:
		ldloc result
		ret
		ret
	}
	.method public static void main(){
		.entrypoint

		ldc.i4 0
		stsfld int32 class ['Chimera']'ChimeraProgram'::'num'
		ldstr ""
		stsfld string class ['Chimera']'ChimeraProgram'::'option'

	loop_3:
		ldstr "Input a number: "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		call int32 class ['ChimeraLib']'Chimera'.Lib::'RdInt'()
		stsfld int32 class ['Chimera']'ChimeraProgram'::'num'
		ldstr "Conversion to binary of that number: "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		ldsfld int32 class ['Chimera']'ChimeraProgram'::'num'
		call string class ['Chimera']'ChimeraProgram'::'Binary'(int32)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		call void class ['ChimeraLib']'Chimera'.Lib::'WrLn'()
		ldstr "Convert another number? "
		call void class ['ChimeraLib']'Chimera'.Lib::'WrStr'(string)
		call string class ['ChimeraLib']'Chimera'.Lib::'RdStr'()
		stsfld string class ['Chimera']'ChimeraProgram'::'option'

	If_4_0_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		call int32 class ['ChimeraLib']'Chimera'.Lib::'LenStr'(string)
		ldc.i4 0
		ceq
		brzero If_4_1_condition
	If_4_0_body:
		ldstr "N"
		stsfld string class ['Chimera']'ChimeraProgram'::'option'
		br If_4_End

	If_4_1_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldc.i4 0
		call string class ['ChimeraLib']'Chimera'.Lib::'AtStr'(string,int32)
		stsfld string class ['Chimera']'ChimeraProgram'::'option'
		br If_4_End

	If_4_2_condition:
	If_4_End:

	If_5_0_condition:
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldstr "Y"
		call int32 class ['ChimeraLib']'Chimera'.Lib::'CmpStr'(string,string)
		ldc.i4 0
		ceq
		ldc.i4.1
		xor
		ldsfld string class ['Chimera']'ChimeraProgram'::'option'
		ldstr "y"
		call int32 class ['ChimeraLib']'Chimera'.Lib::'CmpStr'(string,string)
		ldc.i4 0
		ceq
		ldc.i4.1
		xor
		and
		brzero If_5_1_condition
	If_5_0_body:
		br end_3
		br If_5_End

	If_5_1_condition:
	If_5_End:
		br loop_3
	end_3:
		ret
	}
}
